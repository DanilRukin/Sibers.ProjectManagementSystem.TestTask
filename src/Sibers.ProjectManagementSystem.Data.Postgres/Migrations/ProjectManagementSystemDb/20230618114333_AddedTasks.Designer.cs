// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sibers.ProjectManagementSystem.Data;

#nullable disable

namespace Sibers.ProjectManagementSystem.Data.Postgres.Migrations.ProjectManagementSystemDb
{
    [DbContext(typeof(ProjectManagementSystemContext))]
    [Migration("20230618114333_AddedTasks")]
    partial class AddedTasks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.EmployeeAgregate.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.EmployeeOnProject", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Employee")
                        .HasColumnName("Role");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesOnProjects");
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.ProjectAgregate.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOfTheContractorCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOfTheCustomerCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.TaskEntity.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("AuthorEmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContractorEmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("TaskStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("ToDo")
                        .HasColumnName("TaskStatus");

                    b.HasKey("Id");

                    b.HasIndex("AuthorEmployeeId");

                    b.HasIndex("ContractorEmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.EmployeeAgregate.Employee", b =>
                {
                    b.OwnsOne("Sibers.ProjectManagementSystem.Domain.EmployeeAgregate.Email", "Email", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("integer");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsOne("Sibers.ProjectManagementSystem.Domain.EmployeeAgregate.PersonalData", "PersonalData", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("integer");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Patronymic")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("PersonalData")
                        .IsRequired();
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.EmployeeOnProject", b =>
                {
                    b.HasOne("Sibers.ProjectManagementSystem.Domain.EmployeeAgregate.Employee", "Employee")
                        .WithMany("_employeeOnProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sibers.ProjectManagementSystem.Domain.ProjectAgregate.Project", "Project")
                        .WithMany("_employeesOnProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.ProjectAgregate.Project", b =>
                {
                    b.OwnsOne("Sibers.ProjectManagementSystem.Domain.ProjectAgregate.Priority", "Priority", b1 =>
                        {
                            b1.Property<int>("ProjectId")
                                .HasColumnType("integer");

                            b1.Property<int>("Value")
                                .HasColumnType("integer");

                            b1.HasKey("ProjectId");

                            b1.ToTable("Projects");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.Navigation("Priority")
                        .IsRequired();
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.TaskEntity.Task", b =>
                {
                    b.HasOne("Sibers.ProjectManagementSystem.Domain.EmployeeAgregate.Employee", null)
                        .WithMany("_createdTasks")
                        .HasForeignKey("AuthorEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sibers.ProjectManagementSystem.Domain.EmployeeAgregate.Employee", null)
                        .WithMany("_executableTasks")
                        .HasForeignKey("ContractorEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sibers.ProjectManagementSystem.Domain.ProjectAgregate.Project", null)
                        .WithMany("_tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Sibers.ProjectManagementSystem.Domain.ProjectAgregate.Priority", "Priority", b1 =>
                        {
                            b1.Property<Guid>("TaskId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Value")
                                .HasColumnType("integer");

                            b1.HasKey("TaskId");

                            b1.ToTable("Tasks");

                            b1.WithOwner()
                                .HasForeignKey("TaskId");
                        });

                    b.Navigation("Priority")
                        .IsRequired();
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.EmployeeAgregate.Employee", b =>
                {
                    b.Navigation("_createdTasks");

                    b.Navigation("_employeeOnProjects");

                    b.Navigation("_executableTasks");
                });

            modelBuilder.Entity("Sibers.ProjectManagementSystem.Domain.ProjectAgregate.Project", b =>
                {
                    b.Navigation("_employeesOnProject");

                    b.Navigation("_tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
